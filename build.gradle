plugins {
    id 'jacoco'
    id 'org.sonarqube' version '3.1.1'
    id 'com.diffplug.spotless' version '5.9.0' apply false
    id 'org.springframework.boot' version '2.4.2' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
    id 'net.ltgt.errorprone' version '1.3.0' apply false
    id 'org.siouan.frontend-jdk11' version '5.0.0' apply false
    id 'com.google.cloud.tools.jib' version '2.7.1' apply false
}

ext {
    junitVersion = '5.7.0'
    immutablesVersion = '2.8.9-ea-1'
    errorproneVersion = '2.5.1'
}

allprojects {
    repositories { mavenCentral() }
}
subprojects {
    if (project != project(':frontend')) {
        apply from: "$rootDir/gradle/java.gradle"
        apply from: "$rootDir/gradle/test.gradle"
        apply from: "$rootDir/gradle/spotless.gradle"
    }

    ext {
        mavenBom = org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

tasks.register('jacocoRootReport', JacocoReport).configure {
    description = 'Merge all coverage reports before submit to SonarQube'
    List<JacocoReport> reportTasks = project.subprojects.collect {it.tasks.withType(JacocoReport)}.flatten()
    dependsOn reportTasks

    executionData reportTasks.collect({ it.executionData })
    classDirectories.setFrom reportTasks.collect({it.classDirectories })
    sourceDirectories.setFrom reportTasks.collect({it.sourceDirectories })

    reports {
        html.destination file("${buildDir}/reports/jacoco/merged/html")
        xml.enabled = true
        xml.destination file("${buildDir}/reports/jacoco/merged/merged.xml")
    }
}

sonarqube {
    properties {
        property 'sonar.coverage.jacoco.xmlReportPaths', jacocoRootReport.reports.xml.destination
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.organization', 'kengotoda-github'
        property 'sonar.projectKey', 'KengoTODA_gradle-boilerplate'
    }
}

tasks.named('sonarqube').configure {
    dependsOn jacocoRootReport
}

defaultTasks 'spotlessApply', 'build'
